/* 
Приклади простих SELECT-команд 
з використанням операції "Проекція"
*/

SET LINESIZE 2000
SET PAGESIZE 100

-- шаблон  простої SELECT-команди
SELECT	[DISTINCT] {*, column [alias],...}
FROM	table;

/*
SELECT - ВИБРАТИ щось
FROM – з таблиці
* – ВСІ стовпці
DISTINCT – значення стовпців, які НЕ ПОВТОРЮЮТЬСЯ
column – окремий стовпець
alias - псевдонім стовпця
*/

/* Особливості 
Команди SQL не чутливі до регістру.
Команди SQL можуть складатися з одного або кількох рядків.
Ключові слова не можуть переноситися та скорочуватися.
Пропозиції зазвичай пишуться у різних рядках.
Табуляції та відступи використовуються для покращення читальності.
Команда SQL завершується символом (;)
*/

-- отримання всіх стовпців таблиці
SELECT * 
FROM Loc;

/*
Символ "*" використовувати простіше, ніж вказувати імена стовпців.
Явне задання імен стовпців не впливає на продуктивність.
Але при написанні запитів у програмах
краще ставити кожен стовпець окремо, так як це:
1) гарантує відсутність помилок при зміні структури БД
(додавання нового стовпця, видалення старого),
яке змінює порядок слідування стовпців;
2) полегшує розуміння запиту при його аналізі
у майбутньому Вами чи кимось після Вас.
*/

-- отримання окремих стовпців таблиці
SELECT 
    locno,
	lname 
FROM Loc;

-- отримання окремих стовпців таблиці
SELECT 
    lname 
FROM Loc;

-- отримання списку номерів локацій
SELECT deptno,dname,locno FROM Dept;

-- отримання окремих стовпців таблиці
SELECT 
    deptno,
	dname,
	locno 
FROM Dept;

-- отримання списку номерів локацій із дублюванням значень
SELECT 
    locno 
FROM Dept;

-- отримання списку номерів локацій без дублювання значень
SELECT DISTINCT 
    locno 
FROM Dept;

-- додаткові обчислення з використанням аріфметичних операцій
-- отримання зарплат працівників за місяць з урахуванням надбавки
SELECT 
    ename, 
	sal, 
	sal+300 
FROM emp;
	
-- отримання зарплат працівників за рік з урахуванням надбавки
SELECT 
    ename, 
	sal, 
	12*sal+100 
FROM emp;


/*
Пріоритети операторів:
- Множення та ділення мають більш високий пріоритет,
  ніж додавання і віднімання.
- Оператори з однаковим пріоритетом обчислюються зліва направо.
- Дужки використовуються для вказівки пріоритетів обчислення та
  підвищення читальності виразів.
*/
	
-- Отримання зарплат працівників за рік 
-- з урахуванням надбавки за кожний місяць
SELECT 
    ename, 
    sal, 
	12*(sal+100) 
	FROM emp;
	
-- Отримання податків у 10% із зарплати працівників за місяць 
SELECT 
    ename, 
	sal, 
	10*sal/100 
FROM emp;

/* Визначення псевдоніма (alias) стовпця:
- перейменовує заголовок стовпця;
- корисно при обчисленнях;
- слідує відразу за ім'ям колонки;
- ключове слово AS опціонально 
	і може перебувати між ім'ям колонки та псевдонімом;
- вимагає взяття в подвійні лапки, 
	якщо містить пробіли, спеціальні символи 
	або чутливий до регістру
*/

-- Отримання списку зарплат працівників за місяць
-- з використанням псевдоніму "salary"
SELECT 
    ename AS name, 
	sal salary 
FROM emp;
	
-- Отримання списку зарплат співробітників за рік
-- з використанням складеного псевдоніма
SELECT 
    ename "Name",
    sal*12 "Annual Salary" 
FROM emp;
	
/*
Оператор конкатенації:
- виконує конкатенацію значень у стовпцях
  або рядків до значень інших стовпців
- Записується двома вертикальними рисами (||)
- створює результуючий стовпець,
  значення якого є символьними виразами
*/

-- Отримання списку імен співробітників, об'єднаних із посадами
SELECT 
    ename || job AS "Employees"
FROM emp;
	
/*
Рядкові літерали:
- літерал – це символ, рядок або число, включені до списку SELECT;
- часові та символьні дані повинні бути поміщені в одинарні лапки;
- кожен рядок виводиться один раз для кожного рядка таблиці, що повертається.
*/

-- Отримання списку імен співробітників, об'єднаних із посадами,
-- у вигляді висловлювань
SELECT 
    ename || ' is a ' || job AS "Employee Details"
FROM emp;

/*
Сортування. Пропозиція ORDER BY
- Пропозиція ORDER BY сортує дані.
- ASC: за зростанням (за замовчуванням)
- DESC: за спаданням
- Пропозиція ORDER BY йде останньою у виразі SELECT.
*/

-- Отримання списку працівників у порядку зростання дат зарахування на роботу
SELECT 
    ename, 
	job, 
	deptno, 
	hiredate
FROM emp
ORDER BY hiredate ASC;
		
-- Отримання списку працівників у порядку зменшення дат зарахування на роботу
SELECT 
    ename, 
	job, 
	deptno, 
	hiredate
FROM emp
ORDER BY hiredate DESC;
		
-- Отримання списку працівників із річною зарплатою у порядку зростання її значення
SELECT 
    empno, 
	ename, 
	sal*12 annsal
FROM emp
ORDER BY annsal;
		
-- Отримання списку працівників у порядку зростання номерів підрозділів,
-- із сортуванням усередині підрозділів у порядку зменшення зарплат
SELECT 
    ename, 
	deptno, 
	sal
FROM emp
ORDER BY deptno, sal DESC;

